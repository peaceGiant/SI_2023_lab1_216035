### Dokumentacija za lab1 ###


	4. На вашиот компјутер, направете директориум (локален репозиториум) којшто ќе
биде со исто име како и вашиот оддалечен репозиториум. Влезете во
директориумот и иницијализирајте го Git во директориумот.

git init
Initialized empty Git repository in C:/Users/PeceG/Desktop/FINKI/4. Семестар/СИ/SI_2023_lab1_216035/.git/


	5. Поврзете го локалниот репозиториум со оддалечениот репозиториум.

git remote add origin https://github.com/peaceGiant/SI_2023_lab1_216035.git


	6. Додадете README.md датотека во која ќе се потпишете (име, презиме, број на
индекс). Направете commit со порака Initial commit.

notepad README.md
git add README.md
git commit -m "Initial commit."


	7. Додадете фајл SILab1.java и ископирајте ја содржината на класата од тука.
Направете commit со порака Add java class.

git add SILab1.java
git commit -m "Add java class."


	8. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push origin --all


	9. Отворете три гранки (сите да се разгрануваат од master гранката): bug1, bug2 и
bug3.

git branch bug1
git branch bug2
git branch bug3


	10. Префрлете се на гранката bug1.

git checkout bug1


	11. Поправете ја грешката во for циклусот кој се користи за читање на N-те броеви
од стандарден влез. Направете commit со пораката Fix wrong loop for reading.

git commit -a -m "Fix wrong loop for reading."


	12. Префрлете се на гранката bug2.

git checkout bug2


	13. Поправете ја грешката во методот filterOddNumbers. Направете commit со
пораката Fix wrong condition in filterOddNumbers.

git commit -a -m "Fix wrong condition in filterOddNumbers."


	14. Префрлете се на гранката bug3.

git checkout bug3


	15. Поправете ја грешката во методот sumEvenNumbers. Направете commit со
порака Fix method sumEvenNumbers.

git add SILab1.java
git commit -m "Fix method sumEvenNumbers."


	16. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push origin --all


	17. Префрлете се на гранката master.

git checkout master


	18. Спојте ја гранката bug1 кон гранката master.
Нема конфликти меѓу master и bug1.
Стратегија на спојување: Fast-forward

git merge bug1


	19. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push origin --all


	20. Спојте ја гранката bug2 кон гранката master.
Нема конфликти меѓу master и bug2.
Стратегија на спојување: Recursive

git merge bug2


	21. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push origin --all


	22. Префрлете се на гранката bug3.

git checkout bug3


	23. Направете rebase спрема гранката master.

git rebase master


	24. Префрлете се на гранката master.

git checkout master


	25. Спојте ја гранката bug3 кон гранката master.
Нема конфликти меѓу master и bug3 ни пред, ни после rebase.
Стратегија на спојување: Fast-forward (поради иницијалниот Rebase на bug3)

git merge bug3


	26. Синхронизирајте ги сите гранки со оддалечениот репозиториум. (Доколку е
потребно, употребете --force за гранката bug3).

git push origin --force --all


	27. Додадете датотеката logs.txt во која ќе ги ископирате досегашните git логови.
Додадете ја и датотеката INDEX.txt (каде што наместо INDEX ќе стои вашиот
број на индекс) во која водевте документација додека ја решававте оваа
лабораториска вежба. Направете последен commit со порака Final commit.

	28. Синхронизирајте ги сите гранки со оддалечениот репозиториум.